// Generated by view binder compiler. Do not edit!
package com.eudi.verifier.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eudi.verifier.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerificationResultBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnClose;

  @NonNull
  public final Button btnNewVerification;

  @NonNull
  public final RecyclerView recyclerViewAttributes;

  @NonNull
  public final TextView tvCredentialIssuer;

  @NonNull
  public final TextView tvCredentialType;

  @NonNull
  public final TextView tvExpirationDate;

  @NonNull
  public final TextView tvHolderInfo;

  @NonNull
  public final TextView tvIssuanceDate;

  @NonNull
  public final TextView tvVerificationStatus;

  private ActivityVerificationResultBinding(@NonNull ScrollView rootView, @NonNull Button btnClose,
      @NonNull Button btnNewVerification, @NonNull RecyclerView recyclerViewAttributes,
      @NonNull TextView tvCredentialIssuer, @NonNull TextView tvCredentialType,
      @NonNull TextView tvExpirationDate, @NonNull TextView tvHolderInfo,
      @NonNull TextView tvIssuanceDate, @NonNull TextView tvVerificationStatus) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnNewVerification = btnNewVerification;
    this.recyclerViewAttributes = recyclerViewAttributes;
    this.tvCredentialIssuer = tvCredentialIssuer;
    this.tvCredentialType = tvCredentialType;
    this.tvExpirationDate = tvExpirationDate;
    this.tvHolderInfo = tvHolderInfo;
    this.tvIssuanceDate = tvIssuanceDate;
    this.tvVerificationStatus = tvVerificationStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerificationResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerificationResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verification_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerificationResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      Button btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_new_verification;
      Button btnNewVerification = ViewBindings.findChildViewById(rootView, id);
      if (btnNewVerification == null) {
        break missingId;
      }

      id = R.id.recycler_view_attributes;
      RecyclerView recyclerViewAttributes = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAttributes == null) {
        break missingId;
      }

      id = R.id.tv_credential_issuer;
      TextView tvCredentialIssuer = ViewBindings.findChildViewById(rootView, id);
      if (tvCredentialIssuer == null) {
        break missingId;
      }

      id = R.id.tv_credential_type;
      TextView tvCredentialType = ViewBindings.findChildViewById(rootView, id);
      if (tvCredentialType == null) {
        break missingId;
      }

      id = R.id.tv_expiration_date;
      TextView tvExpirationDate = ViewBindings.findChildViewById(rootView, id);
      if (tvExpirationDate == null) {
        break missingId;
      }

      id = R.id.tv_holder_info;
      TextView tvHolderInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvHolderInfo == null) {
        break missingId;
      }

      id = R.id.tv_issuance_date;
      TextView tvIssuanceDate = ViewBindings.findChildViewById(rootView, id);
      if (tvIssuanceDate == null) {
        break missingId;
      }

      id = R.id.tv_verification_status;
      TextView tvVerificationStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvVerificationStatus == null) {
        break missingId;
      }

      return new ActivityVerificationResultBinding((ScrollView) rootView, btnClose,
          btnNewVerification, recyclerViewAttributes, tvCredentialIssuer, tvCredentialType,
          tvExpirationDate, tvHolderInfo, tvIssuanceDate, tvVerificationStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
